// Copyright (C) by Upvoid Studios
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>

// Stone spawning Automaton
automaton SurfaceTon

cells
  0, 1, 0 as Top

pre
  this.material is "Dirt"
  Top.material is void

body

  # === Grass ===

  //this.aGrass = perlin(x,y,z) $= ::Perlin; max(0, perlin(this.x / 20, this.y / 20, this.z / 20)) * .5 + .5
  this.aGrass = perlin(x,y,z) $= ::Perlin; max(0, perlin(this.x / 20, this.y / 20, this.z / 20)) * .5 + .5 + perlin(this.x / 8, this.y / 8, this.z / 8) * 0.4

  # === Stones ===

  # spawn probabilities
  spawnMod = 1 / 10000 / 10 / 5
  spawnMod = spawnMod * 0 # Stone spawning currently blocks terrain generation.
  spawnModOften  = spawnMod * 10
  spawnModMedium = spawnMod * 3
  spawnModSeldom = spawnMod * 1

  # sizes
  sizeMod = 4
  sizeModSmall = sizeMod * 1.4
  sizeModMedium = sizeMod * 2
  sizeModLarge = sizeMod * 3

  # Stone 1, material 4,9, small, often
  if random(0,1) < spawnModOften
    spawn with sphere(this.position, sizeModSmall * 5)
      union
        mesh "Stone.09" $Stones/Stone.001
          rotate = vec(random(vec3(-1), vec3(1)), random(0, 360))
          scale = random(vec3(.8), vec3(1.2)) * random(0.5, 3) * sizeModSmall
          translate = this.position
  else if random(0,1) < spawnModOften
    spawn with sphere(this.position, sizeModSmall * 5)
      union
        mesh "Stone.04" $Stones/Stone.001
          rotate = vec(random(vec3(-1), vec3(1)), random(0, 360))
          scale = random(vec3(.8), vec3(1.2)) * random(0.5, 3) * sizeModSmall
          translate = this.position

  # Stone 2, material 1,6, medium, often
  else if random(0,1) < spawnModOften
    spawn with sphere(this.position, sizeModMedium * 5)
      union
        mesh "Stone.02" $Stones/Stone.002
          rotate = vec(random(vec3(-1), vec3(1)), random(0, 360))
          scale = random(vec3(.8), vec3(1.2)) * random(0.5, 3) * sizeModMedium
          translate = this.position
  else if random(0,1) < spawnModOften
    spawn with sphere(this.position, sizeModMedium * 5)
      union
        mesh "Stone.06" $Stones/Stone.002
          rotate = vec(random(vec3(-1), vec3(1)), random(0, 360))
          scale = random(vec3(.8), vec3(1.2)) * random(0.5, 3) * sizeModMedium
          translate = this.position

  # Stone 3, material 2,8, medium, seldom
  else if random(0,1) < spawnModSeldom
    spawn with sphere(this.position, sizeModMedium * 5)
      union
        mesh "Stone.03" $Stones/Stone.003
          rotate = vec(random(vec3(-1), vec3(1)), random(0, 360))
          scale = random(vec3(.8), vec3(1.2)) * random(0.5, 3) * sizeModMedium
          translate = this.position
  else if random(0,1) < spawnModSeldom
    spawn with sphere(this.position, sizeModMedium * 5)
      union
        mesh "Stone.08" $Stones/Stone.003
          rotate = vec(random(vec3(-1), vec3(1)), random(0, 360))
          scale = random(vec3(.8), vec3(1.2)) * random(0.5, 3) * sizeModMedium
          translate = this.position

  # Stone 4, material 7,8, big, medium
  else if random(0,1) < spawnModMedium
    spawn with sphere(this.position, sizeModLarge * 5)
      union
        mesh "Stone.07" $Stones/Stone.004
          rotate = vec(random(vec3(-1), vec3(1)), random(0, 360))
          scale = random(vec3(.8), vec3(1.2)) * random(0.5, 3) * sizeModLarge
          translate = this.position
  else if random(0,1) < spawnModMedium
    spawn with sphere(this.position, sizeModLarge * 5)
      union
        mesh "Stone.08" $Stones/Stone.004
          rotate = vec(random(vec3(-1), vec3(1)), random(0, 360))
          scale = random(vec3(.8), vec3(1.2)) * random(0.5, 3) * sizeModLarge
          translate = this.position

  # Stone 5, material 8,9, medium, medium
  else if random(0,1) < spawnModMedium
    spawn with sphere(this.position, sizeModMedium * 5)
      union
        mesh "Stone.08" $Stones/Stone.005
          rotate = vec(random(vec3(-1), vec3(1)), random(0, 360))
          scale = random(vec3(.8), vec3(1.2)) * random(0.5, 3) * sizeModMedium
          translate = this.position
  else if random(0,1) < spawnModMedium
    spawn with sphere(this.position, sizeModMedium * 5)
      union
        mesh "Stone.09" $Stones/Stone.005
          rotate = vec(random(vec3(-1), vec3(1)), random(0, 360))
          scale = random(vec3(.8), vec3(1.2)) * random(0.5, 3) * sizeModMedium
          translate = this.position

  # Stone 6, material 9,14, medium, medium
  else if random(0,1) < spawnModMedium
    spawn with sphere(this.position, sizeModMedium * 5)
      union
        mesh "Stone.09" $Stones/Stone.006
          rotate = vec(random(vec3(-1), vec3(1)), random(0, 360))
          scale = random(vec3(.8), vec3(1.2)) * random(0.5, 3) * sizeModMedium
          translate = this.position
  else if random(0,1) < spawnModMedium
    spawn with sphere(this.position, sizeModMedium * 5)
      union
        mesh "Stone.14" $Stones/Stone.006
          rotate = vec(random(vec3(-1), vec3(1)), random(0, 360))
          scale = random(vec3(.8), vec3(1.2)) * random(0.5, 3) * sizeModMedium
          translate = this.position
