[


{
    "Type": "GeometryPipeline",
    "Name": "PineField",
    "Path": "~.geopipe",
    "Descriptor" :
    {
        "Type" : "Json",
        "Pipeline" :
        {
            "Input" :
            {
                "Type" : "Input"
            },
            "PineLeaves" :
            {
                "Type" : "Resource",
                "Resource": "PineLeaves"
            },
            "Seeds" :
            {
                "Type" : "ConsistentSeedPoint",
                "refNormal": [0.0, 1.0, 0.0],
                "densityDistribution": "TreeDensity",
                "gridSize": 2.0,
                "overrideUpVector": true,
                "maxRefDeviation": 0.8,
                "Nodes" : ["Input"]
            },
            "PineSpawns" :
            {
                "Type" : "Instancing",
                "Nodes" : ["PineLeaves", "Seeds"]
            }
        }
    }
},

{
    "Type": "GeometryPipeline",
    "Name": "ColoredTerrain",
    "Path": "~.geopipe",
    "Descriptor" :
    {
        "Type" : "Json",
        "Pipeline" :
        {
            "Input" :
            {
                "Type" : "Input"
            },
            "NormalRepair" :
            {
                "Type" : "NormalRepair",
                "Nodes" : ["Decimate"],
                "keepExistingBoundaryNormals" : true,
                "maxRelativeDeviation" : 0.3,
                "maxAngle" : 30.0,
                "absoluteDeviation" : 0.25
            },
            "Decimate" :
            {
                "Type" : "Decimate",
                "Nodes" : ["Input"],
                "errorTarget" : 0.05,
                "faceTarget" : 2,
                "constrainBoundaries" : true
            },
            "ConditionalOffset" :
            {
                "Type" : "ConditionalOffset",
                "Nodes" : ["NormalRepair"]
            },
            "TerrainFoliage":
            {
                "Type": "Attribute",
                "Nodes" : ["ConditionalOffset"],
                "Copy": ["aPosition", "aNormal", "aOffset"],
                "Calculated": {
                    "aColor": {
                        "Expression": "perlin(x,y,z) $= ::Perlin; p1 = mesh::aPosition / 30; p2 = p1 / 1.4 + vec3(7.23, 91.1, -5.326); p3 = p2 / 1.4 + vec3(7.23, 91.1, -5.326); vec3(1.2 + perlin(p2.x, p2.y, p2.z) * .3,1 + perlin(p3.x, p3.y, p3.z) * .4,1) * (1 + perlin(p1.x, p1.y, p1.z) * .4)",
                        "Inputs": [ "aPosition:vec3" ]
                    }
                }
            },
            "Output":
            {
                "Type": "Attribute",
                "Nodes" : ["NormalRepair"],
                "Copy": ["aPosition", "aNormal", "aGrass"],
                "Calculated": {
                    "aColor": {
                        "Expression": "perlin(x,y,z) $= ::Perlin; p1 = mesh::aPosition / 30; p2 = p1 / 1.4 + vec3(7.23, 91.1, -5.326); p3 = p2 / 1.4 + vec3(7.23, 91.1, -5.326); vec3(1.2 + perlin(p2.x, p2.y, p2.z) * .3,1 + perlin(p3.x, p3.y, p3.z) * .4,1) * (1 + perlin(p1.x, p1.y, p1.z) * .4)",
                        "Inputs": [ "aPosition:vec3" ]
                    }
                }
            }
        }
    }
},

{
    "Type": "GeometryPipeline",
    "Name": "ColoredTerrainLow",
    "Path": "~.geopipe",
    "Descriptor" :
    {
        "Type" : "Json",
        "Pipeline" :
        {
            "Input" :
            {
                "Type" : "Input"
            },
            "NormalRepair" :
            {
                "Type" : "NormalRepair",
                "Nodes" : ["Decimate"],
                "keepExistingBoundaryNormals" : true,
                "maxRelativeDeviation" : 0.3,
                "maxAngle" : 20.0,
                "absoluteDeviation" : -1
            },
            "Decimate" :
            {
                "Type" : "Decimate",
                "Nodes" : ["Input"],
                "errorTarget" : 1,
                "faceTarget" : 2,
                "constrainBoundaries" : true
            },
            "Output":
            {
                "Type": "Attribute",
                "Nodes" : ["NormalRepair"],
                "Copy": ["aPosition", "aNormal"],
                "Calculated": {
                    "aColor": {
                        "Expression": "perlin(x,y,z) $= ::Perlin; p1 = mesh::aPosition / 30; p2 = p1 / 1.4 + vec3(7.23, 91.1, -5.326); p3 = p2 / 1.4 + vec3(7.23, 91.1, -5.326); vec3(1.2 + perlin(p2.x, p2.y, p2.z) * .3,1 + perlin(p3.x, p3.y, p3.z) * .4,1) * (1 + perlin(p1.x, p1.y, p1.z) * .4)",
                        "Inputs": [ "aPosition:vec3" ]
                    }
                }
            }
        }
    }
},

{
    "Type": "GeometryPipeline",
    "Name": "GrassField",
    "Path": "~.geopipe",
    "Descriptor" :
    {
        "Type" : "Json",
        "Pipeline" :
        {
            "Input" :
            {
                "Type" : "Input"
            },
            "Grass" :
            {
                "Type" : "Resource",
                "Resource": "Mods/Upvoid/Resources.Vegetation/1.0.0::Grass/Grass04.Tall"
            },
            "Seeds" :
            {
                "Type" : "ConsistentSeedPoint",
                "refNormal": [0.0, 1.0, 0.0],
                "densityDistribution": "GrassDensity",
                "gridSize": 2.0,
                "overrideUpVector": true,
                "maxRefDeviation": 0.8,
                "Nodes" : ["Input"]
            },
            "Spawns" :
            {
                "Type" : "Instancing",
                "Nodes" : ["Grass", "Seeds"]
            },
            "ColoredSpawns":
            {
                "Type": "Attribute",
                "Nodes" : ["Spawns"],
                "Copy": ["aPosition"],
                "Calculated": {
                    "aColor": {
                        "Expression": "perlin(x,y,z) $= ::Perlin; p1 = mesh::aPosition / 30; p2 = p1 / 1.4 + vec3(7.23, 91.1, -5.326); p3 = p2 / 1.4 + vec3(7.23, 91.1, -5.326); vec3(1.2 + perlin(p2.x, p2.y, p2.z) * .5,1 + perlin(p3.x, p3.y, p3.z) * .4,1) * (1 + perlin(p1.x, p1.y, p1.z) * .4)",
                        "Inputs": [ "aPosition:vec3" ]
                    },
                    "aNormal": {
                        "Expression": "perlin(x,y,z) $= ::Perlin; p1 = mesh::aPosition / 11.1231; mesh::aNormal * (.8 + perlin(p1.x, p1.y, p1.z) * .4) * .7",
                        "Inputs": [ "aNormal:vec3", "aPosition:vec3" ]
                    },
                    "aTangent": {
                        "Expression": "perlin(x,y,z) $= ::Perlin; p1 = mesh::aPosition / 11.1231; mesh::aTangent * (.8 + perlin(p1.x, p1.y, p1.z) * .4) * .7",
                        "Inputs": [ "aTangent:vec3", "aPosition:vec3" ]
                    }
                }
            }
        }
    }
},

{
    "Type": "GeometryPipeline",
    "Name": "ParvifloraField",
    "Path": "~.geopipe",
    "Descriptor" :
    {
        "Type" : "Json",
        "Pipeline" :
        {
            "Input" :
            {
                "Type" : "Input"
            },
            "Parviflora" :
            {
                "Type" : "Resource",
                "Resource": "Mods/Upvoid/Resources.Vegetation/1.0.0::Undergrowth/Parviflora"
            },
            "Seeds" :
            {
                "Type" : "ConsistentSeedPoint",
                "refNormal": [0.0, 1.0, 0.0],
                "densityDistribution": "ParvifloraDensity",
                "gridSize": 2.0,
                "overrideUpVector": true,
                "maxRefDeviation": 0.8,
                "Nodes" : ["Input"]
            },
            "Spawns" :
            {
                "Type" : "Instancing",
                "Nodes" : ["Parviflora", "Seeds"]
            },
            "ColoredSpawns":
            {
                "Type": "Attribute",
                "Nodes" : ["Spawns"],
                "Copy": ["aPosition"],
                "Calculated": {
                    "aColor": {
                        "Expression": "perlin(x,y,z) $= ::Perlin; p1 = mesh::aPosition / 30; p2 = p1 / 1.4 + vec3(7.23, 91.1, -5.326); p3 = p2 / 1.4 + vec3(7.23, 91.1, -5.326); vec3(1.2 + perlin(p2.x, p2.y, p2.z) * .5,1 + perlin(p3.x, p3.y, p3.z) * .4,1) * (1 + perlin(p1.x, p1.y, p1.z) * .4)",
                        "Inputs": [ "aPosition:vec3" ]
                    },
                    "aNormal": {
                        "Expression": "perlin(x,y,z) $= ::Perlin; p1 = mesh::aPosition / 11.1231; mesh::aNormal * (.8 + perlin(p1.x, p1.y, p1.z) * .4) * .7",
                        "Inputs": [ "aNormal:vec3", "aPosition:vec3" ]
                    },
                    "aTangent": {
                        "Expression": "perlin(x,y,z) $= ::Perlin; p1 = mesh::aPosition / 11.1231; mesh::aTangent * (.8 + perlin(p1.x, p1.y, p1.z) * .4) * .7",
                        "Inputs": [ "aTangent:vec3", "aPosition:vec3" ]
                    }
                }
            }
        }
    }
},

{
    "Type": "GeometryPipeline",
    "Name": "GrassField2",
    "Path": "~.geopipe",
    "Descriptor" :
    {
        "Type" : "Json",
        "Pipeline" :
        {
            "Input" :
            {
                "Type" : "Input"
            },
            "Grass" :
            {
                "Type" : "Resource",
                "Resource": "Mods/Upvoid/Resources.Vegetation/1.0.0::Grass/Grass04.Tall"
            },
            "Seeds" :
            {
                "Type" : "ConsistentSeedPoint",
                "refNormal": [0.0, 1.0, 0.0],
                "densityDistribution": "GrassDensity2",
                "gridSize": 2.0,
                "overrideUpVector": true,
                "maxRefDeviation": 0.8,
                "Nodes" : ["Input"]
            },
            "Spawns" :
            {
                "Type" : "Instancing",
                "Nodes" : ["Grass", "Seeds"]
            }
        }
    }
},

{
    "Type": "GeometryPipeline",
    "Name": "HerbField",
    "Path": "~.geopipe",
    "Descriptor" :
    {
        "Type" : "Json",
        "Pipeline" :
        {
            "Input" :
            {
                "Type" : "Input"
            },
            "Herbs" :
            {
                "Type" : "Resource",
                "Resource": "Mods/Upvoid/Resources.Vegetation/1.0.0::Grass/Grass04"
            },
            "Seeds" :
            {
                "Type" : "ConsistentSeedPoint",
                "refNormal": [0.0, 1.0, 0.0],
                "densityDistribution": "HerbDensity",
                "gridSize": 2.0,
                "overrideUpVector": true,
                "maxRefDeviation": 0.8,
                "Nodes" : ["Input"]
            },
            "Spawns" :
            {
                "Type" : "Instancing",
                "Nodes" : ["Herbs", "Seeds"]
            }
        }
    }
},

{
    "Type": "GeometryPipeline",
    "Name": "HerbField2",
    "Path": "~.geopipe",
    "Descriptor" :
    {
        "Type" : "Json",
        "Pipeline" :
        {
            "Input" :
            {
                "Type" : "Input"
            },
            "Herbs" :
            {
                "Type" : "Resource",
                "Resource": "Mods/Upvoid/Resources.Vegetation/1.0.0::Grass/Grass04"
            },
            "Seeds" :
            {
                "Type" : "ConsistentSeedPoint",
                "refNormal": [0.0, 1.0, 0.0],
                "densityDistribution": "HerbDensity2",
                "gridSize": 2.0,
                "overrideUpVector": true,
                "maxRefDeviation": 0.8,
                "Nodes" : ["Input"]
            },
            "Spawns" :
            {
                "Type" : "Instancing",
                "Nodes" : ["Herbs", "Seeds"]
            }
        }
    }
},

{
    "Type": "GeometryPipeline",
    "Name": "PineImpostorField",
    "Path": "~.geopipe",
    "Descriptor" :
    {
        "Type" : "Json",
        "Pipeline" :
        {
            "Input" :
            {
                "Type" : "Input"
            },
            "PineImpostor" :
            {
                "Type" : "Resource",
                "Resource": "PineImpostor"
            },
            "Seeds" :
            {
                "Type" : "ConsistentSeedPoint",
                "refNormal": [0.0, 1.0, 0.0],
                "densityDistribution": "TreeDensity",
                "overrideUpVector": true,
                "gridSize": 2.0,
                "maxRefDeviation": 0.8,
                "Nodes" : ["Input"]
            },
            "PineSpawns" :
            {
                "Type" : "Instancing",
                "Nodes" : ["PineImpostor", "Seeds"]
            }
        }
    }
},

{
    "Type": "GeometryPipeline",
    "Name": "ColoredBox",
    "Path": "~.geopipe",
    "Descriptor" :
    {
        "Type" : "Json",
        "Pipeline" :
        {
            "Input" :
            {
                "Type" : "Resource",
                "Resource": "::Debug/Box"
            },
            "Output":
            {
                "Type": "Attribute",
                "Nodes" : ["Input"],
                "Copy": ["aPosition", "aNormal"],
                "Calculated": {
                    "aColor": {
                        "Expression": "vec3(1,1,1)",
                        "Inputs": [ ]
                    }
                }
            }
        }
    }
},
{
    "Type": "Mesh",
    "Name": "Box",
    "Path": "~.obj",
    "Descriptor":
    {
        "Type": "FromPipeline",
        "Pipeline": "ColoredBox",
        "Output": "Output"
    }
},
{
    "Type": "GeometryPipeline",
    "Name": "ColoredCylinder",
    "Path": "~.geopipe",
    "Descriptor" :
    {
        "Type" : "Json",
        "Pipeline" :
        {
            "Input" :
            {
                "Type" : "Resource",
                "Resource": "::Debug/Cylinder"
            },
            "Output":
            {
                "Type": "Attribute",
                "Nodes" : ["Input"],
                "Copy": ["aPosition", "aNormal"],
                "Calculated": {
                    "aColor": {
                        "Expression": "vec3(1,1,1)",
                        "Inputs": [ ]
                    }
                }
            }
        }
    }
},
{
    "Type": "Mesh",
    "Name": "Cylinder",
    "Path": "~.obj",
    "Descriptor":
    {
        "Type": "FromPipeline",
        "Pipeline": "ColoredCylinder",
        "Output": "Output"
    }
},
{
    "Type": "GeometryPipeline",
    "Name": "ColoredSphere",
    "Path": "~.geopipe",
    "Descriptor" :
    {
        "Type" : "Json",
        "Pipeline" :
        {
            "Input" :
            {
                "Type" : "Resource",
                "Resource": "::Debug/Sphere"
            },
            "Output":
            {
                "Type": "Attribute",
                "Nodes" : ["Input"],
                "Copy": ["aPosition", "aNormal"],
                "Calculated": {
                    "aColor": {
                        "Expression": "vec3(1,1,1)",
                        "Inputs": [ ]
                    }
                }
            }
        }
    }
},
{
    "Type": "Mesh",
    "Name": "Sphere",
    "Path": "~.obj",
    "Descriptor":
    {
        "Type": "FromPipeline",
        "Pipeline": "ColoredSphere",
        "Output": "Output"
    }
},

{
    "Type": "GeometryPipeline",
    "Name": "ColoredRock",
    "Path": "~.geopipe",
    "Descriptor" :
    {
        "Type" : "Json",
        "Pipeline" :
        {
            "Input" :
            {
                "Type" : "Input"
            },
            "NormalRepair" :
            {
                "Type" : "NormalRepair",
                "Nodes" : ["Decimate"],
                "keepExistingBoundaryNormals" : true,
                "maxRelativeDeviation" : 0.3,
                "maxAngle" : 30.0,
                "absoluteDeviation" : 0.25
            },
            "Decimate" :
            {
                "Type" : "Decimate",
                "Nodes" : ["Input"],
                "errorTarget" : 0.1,
                "faceTarget" : 2,
                "constrainBoundaries" : true
            },
            "Output":
            {
                "Type": "Attribute",
                "Nodes" : ["NormalRepair"],
                "Copy": ["aPosition", "aNormal"],
                "Calculated": {
                    "aColor": {
                        "Expression": "perlin(x,y,z) $= ::Perlin; p1 = mesh::aPosition / 30; p2 = p1 / 1.4 + vec3(7.23, 91.1, -5.326); p3 = p2 / 1.4 + vec3(7.23, 91.1, -5.326); vec3(1.2 + perlin(p2.x, p2.y, p2.z) * .3,1 + perlin(p3.x, p3.y, p3.z) * .4,1) * (1 + perlin(p1.x, p1.y, p1.z) * .4)",
                        "Inputs": [ "aPosition:vec3" ]
                    }
                }
            }
        }
    }
},

{
    "Type": "GeometryPipeline",
    "Name": "ColoredRockLow",
    "Path": "~.geopipe",
    "Descriptor" :
    {
        "Type" : "Json",
        "Pipeline" :
        {
            "Input" :
            {
                "Type" : "Input"
            },
            "NormalRepair" :
            {
                "Type" : "NormalRepair",
                "Nodes" : ["Decimate"],
                "keepExistingBoundaryNormals" : true,
                "maxRelativeDeviation" : 0.3,
                "maxAngle" : 20.0,
                "absoluteDeviation" : -1
            },
            "Decimate" :
            {
                "Type" : "Decimate",
                "Nodes" : ["Input"],
                "errorTarget" : 2,
                "faceTarget" : 2,
                "constrainBoundaries" : true
            },
            "Output":
            {
                "Type": "Attribute",
                "Nodes" : ["NormalRepair"],
                "Copy": ["aPosition", "aNormal"],
                "Calculated": {
                    "aColor": {
                        "Expression": "perlin(x,y,z) $= ::Perlin; p1 = mesh::aPosition / 30; p2 = p1 / 1.4 + vec3(7.23, 91.1, -5.326); p3 = p2 / 1.4 + vec3(7.23, 91.1, -5.326); vec3(1.2 + perlin(p2.x, p2.y, p2.z) * .3,1 + perlin(p3.x, p3.y, p3.z) * .4,1) * (1 + perlin(p1.x, p1.y, p1.z) * .4)",
                        "Inputs": [ "aPosition:vec3" ]
                    }
                }
            }
        }
    }
}
]
